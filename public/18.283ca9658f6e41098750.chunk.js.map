{"version":3,"sources":["webpack:///./src/lib/rootScope.ts","webpack:///./src/components/ripple.ts","webpack:///./src/config/debug.ts","webpack:///./src/helpers/schedulers.ts","webpack:///./src/lib/mtproto/mtproto_config.ts","webpack:///./src/helpers/cancellablePromise.ts","webpack:///./src/helpers/eventListenerBase.ts","webpack:///./src/helpers/sequentialDom.ts","webpack:///./src/helpers/dom/isInDOM.ts","webpack:///./src/config/modes.ts","webpack:///./src/helpers/noop.ts"],"names":["RootScope","super","overlaysActive","idle","isIDLE","deactivated","focusPromise","Promise","resolve","focusResolve","connectionStatus","filterId","config","forwarded_count_max","edit_time_limit","pinned_dialogs_count_max","pinned_infolder_count_max","message_length_max","caption_length_max","this","addEventListener","peerId","document","body","classList","toggle","id","myId","status","name","undefined","_themeColorElem","head","querySelector","color","themeColor","isNight","themeColorElem","setAttribute","darkModeMediaQuery","window","matchMedia","checkDarkMode","systemTheme","matches","dispatchEvent","setTheme","addListener","err","colorScheme","documentElement","setThemeColor","value","isOverlayActive","getTheme","settings","theme","themes","find","t","rootScope","rippleClickId","ripple","elem","callback","onEnd","prepend","add","r","createElement","handler","contains","drawRipple","clientX","clientY","startTime","Date","now","clickId","duration","getComputedStyle","getPropertyValue","replace","elapsedTime","cb","mutate","remove","delay","Math","max","setTimeout","removeEventListener","touchStartFired","requestAnimationFrame","rect","getBoundingClientRect","clickX","left","clickY","top","size","sqrt","abs","height","width","x","y","style","append","isRippleUnneeded","e","target","includes","tagName","touchEnd","animationsEnabled","touches","length","once","cancelBubble","stopPropagation","passive","button","dataset","DEBUG","debug","MOUNT_CLASS_TO","self","fastRafCallbacks","fastRaf","push","currentCallbacks","forEach","fastRafConventionalCallbacks","rafPromise","processing","fastRafConventional","i","fastRafPromise","then","doubleRaf","NULL_PEER_ID","REPLIES_PEER_ID","SERVICE_PEER_ID","MUTE_UNTIL","deferredPromise","deferredHelper","isFulfilled","isRejected","notify","notifyAll","args","lastNotify","listeners","addNotifyListener","deferred","reject","catch","finally","cancel","Object","assign","EventListenerBase","reuseResults","_constructor","listenerResults","options","hasOwnProperty","pop","obj","findAndSplice","l","collectResults","arr","slice","listener","findIndex","result","_dispatchEvent","sequentialDom","promises","raf","bind","scheduled","kind","promise","scheduleFlush","do","element","read","write","isInDOM","isConnected","Modes","test","location","search","indexOf","http","ssl","multipleConnections","asServiceWorker","transport","noop"],"mappings":"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","file":"18.283ca9658f6e41098750.chunk.js","sourcesContent":["/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type { Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, ConstructorDeclMap, Config, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant } from \"../layer\";\nimport type { MyDocument } from \"./appManagers/appDocsManager\";\nimport type { AppMessagesManager, Dialog, MessagesStorage, MyMessage } from \"./appManagers/appMessagesManager\";\nimport type { MyDialogFilter } from \"./storages/filters\";\nimport type { Folder } from \"./storages/dialogs\";\nimport type { UserTyping } from \"./appManagers/appProfileManager\";\nimport type { State, Theme } from \"./appManagers/appStateManager\";\nimport type { MyDraftMessage } from \"./appManagers/appDraftsManager\";\nimport type { PushSubscriptionNotify } from \"./mtproto/webPushApiManager\";\nimport type { PushNotificationObject } from \"./serviceWorker/push\";\nimport type { ConnectionStatusChange } from \"./mtproto/connectionStatus\";\nimport type { GroupCallId, GroupCallInstance, GroupCallOutputSource } from \"./appManagers/appGroupCallsManager\";\nimport type { StreamAmplitude } from \"./calls/streamManager\";\nimport type Chat from \"../components/chat/chat\";\nimport { NULL_PEER_ID, UserAuth } from \"./mtproto/mtproto_config\";\nimport EventListenerBase from \"../helpers/eventListenerBase\";\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\n\nexport type BroadcastEvents = {\n  'chat_full_update': ChatId,\n  'chat_update': ChatId,\n  \n  'user_update': UserId,\n  'user_auth': UserAuth,\n  'user_full_update': UserId,\n\n  'peer_changed': PeerId,\n  'peer_changing': Chat,\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\n  'peer_typings': {peerId: PeerId, typings: UserTyping[]},\n  'peer_block': {peerId: PeerId, blocked: boolean},\n  'peer_title_edit': PeerId,\n  'peer_bio_edit': PeerId,\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\n  'peer_full_update': PeerId,\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_new': MyDialogFilter,\n  'filter_order': number[],\n\n  'folder_unread': Folder,\n  \n  'dialog_draft': {peerId: PeerId, dialog: Dialog, drop: boolean, draft: MyDraftMessage | undefined, index: number},\n  'dialog_unread': {peerId: PeerId},\n  'dialog_flush': {peerId: PeerId},\n  'dialog_drop': {peerId: PeerId, dialog?: Dialog},\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\n  //'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog,\n  // 'dialog_order': {dialog: Dialog, pos: number},\n  'dialogs_multiupdate': {[peerId: PeerId]: Dialog},\n  \n  'history_append': {storage: MessagesStorage, peerId: PeerId, mid: number},\n  'history_update': {storage: MessagesStorage, peerId: PeerId, mid: number},\n  'history_reply_markup': {peerId: PeerId},\n  'history_multiappend': AppMessagesManager['newMessagesToHandle'],\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\n  'history_forbidden': PeerId,\n  'history_reload': PeerId,\n  'history_focus': {peerId: PeerId, threadId?: number, mid?: number},\n  //'history_request': void,\n  \n  'message_edit': {storage: MessagesStorage, peerId: PeerId, mid: number},\n  'message_views': {peerId: PeerId, mid: number, views: number},\n  'message_sent': {storage: MessagesStorage, tempId: number, tempMessage: any, mid: number, message: MyMessage},\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\n  'messages_media_read': {peerId: PeerId, mids: number[]},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': {peerId: PeerId, mid: number},\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\n\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n\n  'media_play': {doc: MyDocument, message: Message.message, media: HTMLMediaElement},\n  'media_pause': void,\n  'media_playback_params': {volume: number, muted: boolean, playbackRate: number},\n  'media_stop': void,\n  \n  'state_cleared': void,\n  'state_synchronized': ChatId | void,\n  'state_synchronizing': ChatId | void,\n  \n  'contacts_update': UserId,\n  'avatar_update': PeerId,\n  'poll_update': {poll: Poll, results: PollResults},\n  'invalidate_participants': ChatId,\n  //'channel_settings': {channelId: number},\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\n\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any},\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\n  \n  'event-heavy-animation-start': void,\n  'event-heavy-animation-end': void,\n  \n  'im_mount': void,\n  'im_tab_change': number,\n  \n  'idle': boolean,\n  \n  'overlay_toggle': boolean,\n  \n  'background_change': void,\n  \n  'privacy_update': Update.updatePrivacy,\n  \n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n  \n  'language_change': string,\n  \n  'theme_change': void,\n  \n  'instance_activated': void,\n  'instance_deactivated': void,\n  \n  'push_notification_click': PushNotificationObject,\n  'push_init': PushSubscriptionNotify,\n  'push_subscribe': PushSubscriptionNotify,\n  'push_unsubscribe': PushSubscriptionNotify,\n  \n  'emoji_recent': string,\n  \n  'download_start': DocId,\n  'download_progress': any,\n  'document_downloaded': MyDocument,\n\n  'context_menu_toggle': boolean,\n  'choosing_sticker': boolean\n\n  'group_call_state': GroupCallInstance,\n  'group_call_update': GroupCall,\n  'group_call_amplitude': {amplitudes: StreamAmplitude[], type: 'all' | 'input'},\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\n  'group_call_pinned': {instance: GroupCallInstance, source?: GroupCallOutputSource}\n};\n\nexport class RootScope extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n} & {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n}> {\n  public overlaysActive = 0;\n  public myId: PeerId;\n  public idle = {\n    isIDLE: true,\n    deactivated: false,\n    focusPromise: Promise.resolve(),\n    focusResolve: () => {}\n  };\n  public connectionStatus: {[name: string]: ConnectionStatusChange} = {};\n  public settings: State['settings'];\n  public peerId: PeerId;\n  public filterId = 0;\n  public systemTheme: Theme['name'];\n  public config: Partial<Config.config> = {\n    forwarded_count_max: 100,\n    edit_time_limit: 86400 * 2,\n    pinned_dialogs_count_max: 5,\n    pinned_infolder_count_max: 100,\n    message_length_max: 4096,\n    caption_length_max: 1024,\n  };\n\n  public themeColor: string;\n  private _themeColorElem: Element;\n\n  constructor() {\n    super();\n\n    this.addEventListener('peer_changed', (peerId) => {\n      this.peerId = peerId;\n      document.body.classList.toggle('has-chat', !!peerId);\n    });\n\n    this.addEventListener('user_auth', ({id}) => {\n      // @ts-ignore\n      this.myId = typeof(NULL_PEER_ID) === 'number' ? +id : '' + id;\n    });\n\n    this.addEventListener('connection_status_change', (status) => {\n      this.connectionStatus[status.name] = status;\n    });\n\n    this.addEventListener('idle', (isIDLE) => {\n      if(isIDLE) {\n        this.idle.focusPromise = new Promise((resolve) => {\n          this.idle.focusResolve = resolve;\n        });\n      } else {\n        this.idle.focusResolve();\n      }\n    });\n  }\n\n  get themeColorElem() {\n    if(this._themeColorElem !== undefined) {\n      return this._themeColorElem;\n    }\n\n    return this._themeColorElem = document.head.querySelector('[name=\"theme-color\"]') as Element || null;\n  }\n\n  public setThemeColor(color = this.themeColor) {\n    if(!color) {\n      color = this.isNight() ? '#212121' : '#ffffff';\n    }\n\n    const themeColorElem = this.themeColorElem;\n    if(themeColorElem) {\n      themeColorElem.setAttribute('content', color);\n    }\n  }\n\n  public setThemeListener() {\n    try {\n      const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n      const checkDarkMode = () => {\n        //const theme = this.getTheme();\n        this.systemTheme = darkModeMediaQuery.matches ? 'night' : 'day';\n        //const newTheme = this.getTheme();\n\n        if(this.myId) {\n          this.dispatchEvent('theme_change');\n        } else {\n          this.setTheme();\n        }\n      };\n\n      if('addEventListener' in darkModeMediaQuery) {\n        darkModeMediaQuery.addEventListener('change', checkDarkMode);\n      } else if('addListener' in darkModeMediaQuery) {\n        (darkModeMediaQuery as any).addListener(checkDarkMode);\n      }\n\n      checkDarkMode();\n    } catch(err) {\n\n    }\n  }\n\n  public setTheme() {\n    const isNight = this.isNight();\n    const colorScheme = document.head.querySelector('[name=\"color-scheme\"]');\n    if(colorScheme) {\n      colorScheme.setAttribute('content', isNight ? 'dark' : 'light');\n    }\n\n    document.documentElement.classList.toggle('night', isNight);\n    this.setThemeColor();\n  }\n\n  get isOverlayActive() {\n    return this.overlaysActive > 0;\n  }\n\n  set isOverlayActive(value: boolean) {\n    this.overlaysActive += value ? 1 : -1;\n    this.dispatchEvent('overlay_toggle', this.isOverlayActive);\n  }\n\n  public isNight() {\n    return this.getTheme().name === 'night';\n  }\n\n  public getTheme(name: Theme['name'] = this.settings.theme === 'system' ? this.systemTheme : this.settings.theme) {\n    return this.settings.themes.find(t => t.name === name);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n\n/* rootScope.addEventListener('album_edit', (e) => {\n  \n});\n\nrootScope.addEventListener<'album_edit'>('album_edit', (e) => {\n  \n}); */\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport sequentialDom from \"../helpers/sequentialDom\";\r\nimport {IS_TOUCH_SUPPORTED} from \"../environment/touchSupport\";\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nlet rippleClickId = 0;\r\nexport function ripple(elem: HTMLElement, callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), onEnd: (id: number) => void = null, prepend = false) {\r\n  //return;\r\n  if(elem.querySelector('.c-ripple')) return;\r\n  elem.classList.add('rp');\r\n  \r\n  let r = document.createElement('div');\r\n  r.classList.add('c-ripple');\r\n\r\n  const isSquare = elem.classList.contains('rp-square');\r\n  if(isSquare) {\r\n    r.classList.add('is-square');\r\n  }\r\n\r\n  elem[prepend ? 'prepend' : 'append'](r);\r\n\r\n  let handler: () => void;\r\n  //let animationEndPromise: Promise<number>;\r\n  const drawRipple = (clientX: number, clientY: number) => {\r\n    const startTime = Date.now();\r\n    const elem = document.createElement('div');\r\n\r\n    const clickId = rippleClickId++;\r\n    \r\n    //console.log('ripple drawRipple');\r\n    \r\n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\r\n    //console.log('ripple duration', duration);\r\n\r\n    handler = () => {\r\n    //handler = () => animationEndPromise.then((duration) => {\r\n      //console.log('ripple animation was:', duration);\r\n\r\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\r\n      //return;\r\n      let elapsedTime = Date.now() - startTime;\r\n      const cb = () => {\r\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\r\n        sequentialDom.mutate(() => {\r\n          elem.remove();\r\n        });\r\n        \r\n        if(onEnd) onEnd(clickId);\r\n      };\r\n      if(elapsedTime < duration) {\r\n        let delay = Math.max(duration - elapsedTime, duration / 2);\r\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\r\n\r\n        setTimeout(cb, delay);\r\n      } else {\r\n        elem.classList.add('hiding');\r\n        setTimeout(cb, duration / 2);\r\n      }\r\n\r\n      if(!IS_TOUCH_SUPPORTED) {\r\n        window.removeEventListener('contextmenu', handler);\r\n      }\r\n\r\n      handler = null;\r\n      touchStartFired = false;\r\n    };\r\n    //});\r\n\r\n    callback && callback(clickId);\r\n\r\n    /* callback().then((bad) => {\r\n      if(bad) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n      \r\n      //console.log('ripple after promise', Date.now() - startTime);\r\n      //console.log('ripple tooSlow:', tooSlow);\r\n      /* if(tooSlow) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n\r\n      window.requestAnimationFrame(() => {\r\n        const rect = r.getBoundingClientRect();\r\n        elem.classList.add('c-ripple__circle');\r\n\r\n        const clickX = clientX - rect.left;\r\n        const clickY = clientY - rect.top;\r\n\r\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\r\n        const size = radius;\r\n\r\n        // center of circle\r\n        const x = clickX - size / 2;\r\n        const y = clickY - size / 2;\r\n\r\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\r\n\r\n        elem.style.width = elem.style.height = size + 'px';\r\n        elem.style.left = x + 'px';\r\n        elem.style.top = y + 'px';\r\n\r\n        // нижний код выполняется с задержкой\r\n        /* animationEndPromise = new Promise((resolve) => {\r\n          span.addEventListener('animationend', () => {\r\n            // 713 -> 700\r\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\r\n          }, {once: true});\r\n        }); */\r\n        \r\n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\r\n        /* span.style.display = 'none';\r\n        r.append(span);\r\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\r\n        span.style.display = ''; */\r\n\r\n        r.append(elem);\r\n\r\n        //r.classList.add('active');\r\n        //handler();\r\n      });\r\n    //});\r\n  };\r\n\r\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\r\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \r\n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\r\n    );\r\n\r\n  // TODO: rename this variable\r\n  let touchStartFired = false;\r\n  if(IS_TOUCH_SUPPORTED) {\r\n    let touchEnd = () => {\r\n      handler && handler();\r\n    };\r\n  \r\n    elem.addEventListener('touchstart', (e) => {\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n\r\n      //console.log('ripple touchstart', e);\r\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('touchstart', e);\r\n      touchStartFired = true;\r\n  \r\n      let {clientX, clientY} = e.touches[0];\r\n      drawRipple(clientX, clientY);\r\n      elem.addEventListener('touchend', touchEnd, {once: true});\r\n  \r\n      window.addEventListener('touchmove', (e) => {\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        touchEnd();\r\n        elem.removeEventListener('touchend', touchEnd);\r\n      }, {once: true});\r\n    }, {passive: true});\r\n  } else {\r\n    elem.addEventListener('mousedown', (e) => {\r\n      if(![0, 2].includes(e.button)) { // only left and right buttons\r\n        return;\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\r\n\r\n      if(elem.dataset.ripple === '0' || isRippleUnneeded(e)) {\r\n        return;\r\n      } else if(touchStartFired) {\r\n        touchStartFired = false;\r\n        return;\r\n      }\r\n  \r\n      let {clientX, clientY} = e;\r\n      drawRipple(clientX, clientY);\r\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\r\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\r\n    }, {passive: true});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from \"./modes\";\r\n\r\nexport const DEBUG = process.env.NODE_ENV !== 'production' || Modes.debug;\r\nconst ctx: any = typeof(window) !== 'undefined' ? window : self;\r\nexport const MOUNT_CLASS_TO: any = DEBUG || true/*  && false */ ? ctx : {};\r\nexport default DEBUG;\r\n\r\n//let m = DEBUG;\r\n/* if(!DEBUG) {\r\n  ctx.sandpitTurtle = () => {\r\n    //if(!m) {\r\n      for(let i in MOUNT_CLASS_TO) {\r\n        ctx[i] = MOUNT_CLASS_TO[i];\r\n      }\r\n      //m = true;\r\n    //}\r\n  \r\n    //DEBUG = !DEBUG;\r\n  };\r\n} */\r\n\r\n/* export const superDebug = (object: any, key: string) => {\r\n  var d = object[key];\r\n  var beforeStr = '', afterStr = '';\r\n  for(var r of d) {\r\n    beforeStr += r.before.hex + '\\n';\r\n    afterStr += r.after.hex + '\\n';\r\n  }\r\n\r\n  beforeStr = beforeStr.trim();\r\n  afterStr = afterStr.trim();\r\n  //var beforeStr = d.map(r => r.before.hex).join('\\n');\r\n  //var afterStr = d.map(r => r.after.hex).join('\\n');\r\n\r\n  var dada = (name: string, str: string) => {\r\n    var a = document.createElement('a');\r\n    a.target = '_blank';\r\n    a.download = name + '.txt';\r\n    a.href = URL.createObjectURL(new Blob([str], {\r\n      type: 'text/plain'\r\n    }));\r\n    document.body.append(a);\r\n    a.click();\r\n  };\r\n\r\n  dada(key + '_' + 'before', beforeStr);\r\n  dada(key + '_' + 'after', afterStr);\r\n}\r\n\r\nMOUNT_CLASS_TO.superDebug = superDebug; */\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n// * Jolly Cobra's schedulers\r\nimport { NoneToVoidFunction } from \"../types\";\r\n\r\n/*\r\nexport function throttleWithTickEnd<F extends AnyToVoidFunction>(fn: F) {\r\n  return throttleWith(onTickEnd, fn);\r\n}\r\n\r\nexport function throttleWithNow<F extends AnyToVoidFunction>(fn: F) {\r\n  return throttleWith(runNow, fn);\r\n}\r\n\r\nexport function onTickEnd(cb: NoneToVoidFunction) {\r\n  Promise.resolve().then(cb);\r\n}\r\n\r\nfunction runNow(fn: NoneToVoidFunction) {\r\n  fn();\r\n} */\r\n\r\nlet fastRafCallbacks: NoneToVoidFunction[] | undefined;\r\nexport function fastRaf(callback: NoneToVoidFunction) {\r\n  if(!fastRafCallbacks) {\r\n    fastRafCallbacks = [callback];\r\n\r\n    requestAnimationFrame(() => {\r\n      const currentCallbacks = fastRafCallbacks!;\r\n      fastRafCallbacks = undefined;\r\n      currentCallbacks.forEach((cb) => cb());\r\n    });\r\n  } else {\r\n    fastRafCallbacks.push(callback);\r\n  }\r\n}\r\n\r\nlet fastRafConventionalCallbacks: NoneToVoidFunction[] | undefined, processing = false;\r\nexport function fastRafConventional(callback: NoneToVoidFunction) {\r\n  if(!fastRafConventionalCallbacks) {\r\n    fastRafConventionalCallbacks = [callback];\r\n\r\n    requestAnimationFrame(() => {\r\n      processing = true;\r\n      for(let i = 0; i < fastRafConventionalCallbacks.length; ++i) {\r\n        fastRafConventionalCallbacks[i]();\r\n      }\r\n\r\n      fastRafConventionalCallbacks = undefined;\r\n      processing = false;\r\n    });\r\n  } else if(processing) {\r\n    callback();\r\n  } else {\r\n    fastRafConventionalCallbacks.push(callback);\r\n  }\r\n}\r\n\r\nlet rafPromise: Promise<DOMHighResTimeStamp>;\r\nexport function fastRafPromise() {\r\n  if(rafPromise) return rafPromise;\r\n\r\n  rafPromise = new Promise(requestAnimationFrame);\r\n  rafPromise.then(() => {\r\n    rafPromise = undefined;\r\n  });\r\n\r\n  return rafPromise;\r\n}\r\n\r\nexport function doubleRaf() {\r\n  return new Promise<void>((resolve) => {\r\n    fastRaf(() => {\r\n      fastRaf(resolve);\r\n    });\r\n  });\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n\r\n/**\r\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\r\n */\r\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\r\n\r\nexport const NULL_PEER_ID: PeerId = 0;\r\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\r\nexport const SERVICE_PEER_ID: PeerId = 777000;\r\nexport const MUTE_UNTIL = 0x7FFFFFFF;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport noop from \"./noop\";\r\n\r\nexport interface CancellablePromise<T> extends Promise<T> {\r\n  resolve?: (value: T) => void,\r\n  reject?: (...args: any[]) => void,\r\n  cancel?: () => void,\r\n\r\n  notify?: (...args: any[]) => void,\r\n  notifyAll?: (...args: any[]) => void,\r\n  lastNotify?: any,\r\n  listeners?: Array<(...args: any[]) => void>,\r\n  addNotifyListener?: (callback: (...args: any[]) => void) => void,\r\n\r\n  isFulfilled?: boolean,\r\n  isRejected?: boolean\r\n}\r\n\r\nexport function deferredPromise<T>() {\r\n  let deferredHelper: any = {\r\n    isFulfilled: false, \r\n    isRejected: false,\r\n\r\n    notify: () => {}, \r\n    notifyAll: (...args: any[]) => {\r\n      deferredHelper.lastNotify = args;\r\n      deferredHelper.listeners.forEach((callback: any) => callback(...args));\r\n    }, \r\n\r\n    listeners: [],\r\n    addNotifyListener: (callback: (...args: any[]) => void) => {\r\n      if(deferredHelper.lastNotify) {\r\n        callback(...deferredHelper.lastNotify);\r\n      }\r\n\r\n      deferredHelper.listeners.push(callback);\r\n    }\r\n  };\r\n\r\n  let deferred: CancellablePromise<T> = new Promise<T>((resolve, reject) => {\r\n    deferredHelper.resolve = (value: T) => {\r\n      if(deferred.isFulfilled || deferred.isRejected) return;\r\n\r\n      deferred.isFulfilled = true;\r\n      resolve(value);\r\n    };\r\n    \r\n    deferredHelper.reject = (...args: any[]) => {\r\n      if(deferred.isRejected || deferred.isFulfilled) return;\r\n      \r\n      deferred.isRejected = true;\r\n      reject(...args);\r\n    };\r\n  });\r\n\r\n  // @ts-ignore\r\n  /* deferred.then = (resolve: (value: T) => any, reject: (...args: any[]) => any) => {\r\n    const n = deferredPromise<ReturnType<typeof resolve>>();\r\n    \r\n  }; */\r\n\r\n  deferred.catch(noop).finally(() => {\r\n    deferred.notify = deferred.notifyAll = deferred.lastNotify = null;\r\n    deferred.listeners.length = 0;\r\n\r\n    if(deferred.cancel) {\r\n      deferred.cancel = () => {};\r\n    }\r\n  });\r\n\r\n  Object.assign(deferred, deferredHelper);\r\n\r\n  return deferred;\r\n}","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\n//import { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport type { ArgumentTypes, SuperReturnType } from \"../types\";\r\n\r\n// class EventSystem {\r\n//   wm: WeakMap<any, Record<any, Set<any>>> = new WeakMap();\r\n\r\n//   add(target: any, event: any, listener: any) {\r\n//     let listeners = this.wm.get(target);\r\n//     if (listeners === undefined) {\r\n//         listeners = {};\r\n//     }\r\n//     let listenersForEvent = listeners[event];\r\n//     if (listenersForEvent === undefined) {\r\n//         listenersForEvent = new Set();\r\n//     }\r\n//     listenersForEvent.add(listener);\r\n//     listeners[event] = listenersForEvent;\r\n//     //target.addEventListener(event, listener);\r\n//     this.wm.set(target, listeners);\r\n//   };\r\n\r\n//   remove(target: any, event: any, listener: any) {\r\n//     let listeners = this.wm.get(target);\r\n//     if (!listeners) return;\r\n//     let listenersForEvent = listeners[event];\r\n//     if (!listenersForEvent) return;\r\n//     listenersForEvent.delete(listener);\r\n//   };\r\n  \r\n//   /* fire(target, event) {\r\n//      let listeners = this.wm.get(target);\r\n//      if (!listeners) return;\r\n//      let listenersForEvent = listeners[event];\r\n//      if (!listenersForEvent) return;\r\n//      for (let handler of handlers) {\r\n//          setTimeout(handler, 0, event, target); // we use a setTimeout here because we want event triggering to be asynchronous. \r\n//      }\r\n//   }; */\r\n// }\r\n\r\n// console.log = () => {};\r\n\r\n// const e = new EventSystem();\r\n// MOUNT_CLASS_TO.e = e;\r\n\r\n/**\r\n * Better not to remove listeners during setting\r\n * Should add listener callback only once\r\n */\r\n\r\n// type EventLitenerCallback<T> = (data: T) => \r\n// export default class EventListenerBase<Listeners extends {[name: string]: Function}> {\r\nexport default class EventListenerBase<Listeners extends Record<string, Function>> {\r\n  protected listeners: Partial<{\r\n    [k in keyof Listeners]: Array<{callback: Listeners[k], options: boolean | AddEventListenerOptions}>\r\n  }>;\r\n  protected listenerResults: Partial<{\r\n    [k in keyof Listeners]: ArgumentTypes<Listeners[k]>\r\n  }>;\r\n\r\n  private reuseResults: boolean;\r\n\r\n  constructor(reuseResults?: boolean) {\r\n    this._constructor(reuseResults);\r\n  }\r\n\r\n  public _constructor(reuseResults = false): any {\r\n    this.reuseResults = reuseResults;\r\n    this.listeners = {};\r\n    this.listenerResults = {};\r\n  }\r\n\r\n  public addEventListener<T extends keyof Listeners>(name: T, callback: Listeners[T], options?: boolean | AddEventListenerOptions) {\r\n    (this.listeners[name] ?? (this.listeners[name] = [])).push({callback, options}); // ! add before because if you don't, you won't be able to delete it from callback\r\n\r\n    if(this.listenerResults.hasOwnProperty(name)) {\r\n      callback(...this.listenerResults[name]);\r\n      \r\n      if((options as AddEventListenerOptions)?.once) {\r\n        this.listeners[name].pop();\r\n        return;\r\n      }\r\n    }\r\n    \r\n    //e.add(this, name, {callback, once});\r\n  }\r\n\r\n  public addMultipleEventsListeners(obj: {\r\n    [name in keyof Listeners]?: Listeners[name]\r\n  }) {\r\n    for(const i in obj) {\r\n      this.addEventListener(i, obj[i]);\r\n    }\r\n  }\r\n\r\n  public removeEventListener<T extends keyof Listeners>(name: T, callback: Listeners[T], options?: boolean | AddEventListenerOptions) {\r\n    if(this.listeners[name]) {\r\n      this.listeners[name].findAndSplice(l => l.callback === callback);\r\n    }\r\n    //e.remove(this, name, callback);\r\n  }\r\n\r\n  // * must be protected, but who cares\r\n  private _dispatchEvent<T extends keyof Listeners>(name: T, collectResults: boolean, ...args: ArgumentTypes<Listeners[T]>) {\r\n    if(this.reuseResults) {\r\n      this.listenerResults[name] = args;\r\n    }\r\n\r\n    const arr: Array<SuperReturnType<Listeners[typeof name]>> = collectResults && [];\r\n\r\n    const listeners = this.listeners[name];\r\n    if(listeners) {\r\n      // ! this one will guarantee execution even if delete another listener during setting\r\n      const left = listeners.slice();\r\n      left.forEach((listener) => {\r\n        const index = listeners.findIndex((l) => l.callback === listener.callback);\r\n        if(index === -1) {\r\n          return;\r\n        }\r\n\r\n        let result: any;\r\n        try {\r\n          result = listener.callback(...args);\r\n        } catch(err) {\r\n          \r\n        }\r\n\r\n        if(arr) {\r\n          arr.push(result);\r\n        }\r\n\r\n        if((listener.options as AddEventListenerOptions)?.once) {\r\n          this.removeEventListener(name, listener.callback);\r\n        }\r\n      });\r\n    }\r\n\r\n    return arr;\r\n  }\r\n\r\n  public dispatchResultableEvent<T extends keyof Listeners>(name: T, ...args: ArgumentTypes<Listeners[T]>) {\r\n    return this._dispatchEvent(name, true, ...args);\r\n  }\r\n\r\n  // * must be protected, but who cares\r\n  public dispatchEvent<T extends keyof Listeners>(name: T, ...args: ArgumentTypes<Listeners[T]>) {\r\n    this._dispatchEvent(name, false, ...args);\r\n  }\r\n\r\n  public cleanup() {\r\n    this.listeners = {}; \r\n    this.listenerResults = {};\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { fastRaf } from \"./schedulers\";\r\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"./dom/isInDOM\";\r\n\r\nclass SequentialDom {\r\n  private promises: Partial<{\r\n    read: CancellablePromise<void>,\r\n    write: CancellablePromise<void>\r\n  }> = {};\r\n  private raf = fastRaf.bind(null);\r\n  private scheduled = false;\r\n\r\n  private do(kind: keyof SequentialDom['promises'], callback?: VoidFunction) {\r\n    let promise = this.promises[kind];\r\n    if(!promise) {\r\n      this.scheduleFlush();\r\n      promise = this.promises[kind] = deferredPromise<void>();\r\n    }\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n    \r\n    return promise;\r\n  }\r\n\r\n  public measure(callback?: VoidFunction) {\r\n    return this.do('read', callback);\r\n  }\r\n\r\n  public mutate(callback?: VoidFunction) {\r\n    return this.do('write', callback);\r\n  }\r\n\r\n  /**\r\n   * Will fire instantly if element is not connected\r\n   * @param element \r\n   * @param callback \r\n   */\r\n  public mutateElement(element: HTMLElement, callback?: VoidFunction) {\r\n    const promise = isInDOM(element) ? this.mutate() : Promise.resolve();\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private scheduleFlush() {\r\n    if(!this.scheduled) {\r\n      this.scheduled = true;\r\n\r\n      this.raf(() => {\r\n        this.promises.read && this.promises.read.resolve();\r\n        this.promises.write && this.promises.write.resolve();\r\n\r\n        this.scheduled = false;\r\n        this.promises = {};\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst sequentialDom = new SequentialDom();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.sequentialDom = sequentialDom);\r\nexport default sequentialDom;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\n/* export function isInDOM(element: Element, parentNode?: HTMLElement): boolean {\r\n  if(!element) {\r\n    return false;\r\n  }\r\n\r\n  parentNode = parentNode || document.body;\r\n  if(element === parentNode) {\r\n    return true;\r\n  }\r\n  return isInDOM(element.parentNode as HTMLElement, parentNode);\r\n} */\r\nexport default function isInDOM(element: Element): boolean {\r\n  return element?.isConnected;\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { TransportType } from \"../lib/mtproto/dcConfigurator\";\r\n\r\nconst Modes = {\r\n  test: location.search.indexOf('test=1') > 0/*  || true */,\r\n  debug: location.search.indexOf('debug=1') > 0,\r\n  http: false,\r\n  ssl: true, // location.search.indexOf('ssl=1') > 0 || location.protocol === 'https:' && location.search.indexOf('ssl=0') === -1,\r\n  multipleConnections: true,\r\n  asServiceWorker: false,\r\n  transport: 'websocket' as TransportType\r\n};\r\n\r\n                        \r\nModes.http = location.search.indexOf('http=1') > 0;\r\n          \r\n\r\n                                       \r\n                  \r\n          \r\n\r\nif(Modes.http) {\r\n  Modes.transport = 'https';\r\n}\r\n\r\n                  \r\n                             \r\n          \r\n\r\nexport default Modes;\r\n","export default function noop() {}\r\n"],"sourceRoot":""}